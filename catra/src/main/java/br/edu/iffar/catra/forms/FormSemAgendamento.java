/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.iffar.catra.forms;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

import br.edu.iffar.catra.control.PrincipalControl;
import br.edu.iffar.fw.classBag.db.model.api.APIAgendamento;
import br.edu.iffar.fw.classBag.db.model.api.APIAgendamentosDisponibilizados;
import br.edu.iffar.fw.classBag.db.model.api.APIRefeicao2;
import br.edu.iffar.fw.classBag.db.model.api.APIUsuario;

/**
 *
 * @author darlan
 */
public class FormSemAgendamento extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    
    private List<APIAgendamentosDisponibilizados> ageDisponibilizados;
	private APIUsuario usuario;
    private APIRefeicao2 [] arrayRefeicoes;
    
    
    private APIAgendamentosDisponibilizados ageDisp = null;
    private APIAgendamento agendamento = null;

    class MyTableModel extends AbstractTableModel {

        private static final long serialVersionUID = 1L;
        private String[] columnNames = {"Para","Refeição", "Usuário", "Disponibilizado as"};
        private Object[][] data;

        private MyTableModel() {
            data = new Object[ageDisponibilizados.size()][5];
            int row = 0;
            for (APIAgendamentosDisponibilizados age : ageDisponibilizados) {
				data[row][0] = age.getAgendamento().getDtAgendamento().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                data[row][1] = age.getAgendamento().getRefeicao().toString();
                data[row][2] = age.getUsuarioDisponibilizou().labelIniciais();
                data[row][3] = age.getDtDisponibilizado().format(DateTimeFormatter.ofPattern("dd/MM/yyyy hh:mm"));
                data[row][4] = age;
                row++;
            }
        }

        public int getColumnCount() {
            return columnNames.length;
        }

        public int getRowCount() {
            return data.length;
        }

        public String getColumnName(int col) {
            return columnNames[col];
        }

        public Object getValueAt(int row, int col) {
            return data[row][col];
        }

        /*
         * JTable uses this method to determine the default renderer/
         * editor for each cell.  If we didn't implement this method,
         * then the last column would contain text ("true"/"false"),
         * rather than a check box.
         */
        public Class getColumnClass(int c) {
            return getValueAt(0, c).getClass();
        }

        /*
         * Don't need to implement this method unless your table's
         * editable.
         */
        public boolean isCellEditable(int row, int col) {
            //Note that the data/cell address is constant,
            //no matter where the cell appears onscreen.
            if (col < 2) {
                return false;
            } else {
                return false;
            }
        }

        /*
         * Don't need to implement this method unless your table's
         * data can change.
         */
        public void setValueAt(Object value, int row, int col) {
            data[row][col] = value;
            fireTableCellUpdated(row, col);
        }

    }

    /**
     * Creates new form FormSemAgendamento
     */
    public FormSemAgendamento() {
        initComponents();
    }

    public FormSemAgendamento(APIUsuario usuario, APIRefeicao2[] refeicoes, List<APIAgendamentosDisponibilizados> listAgeDisp) {
        this.ageDisponibilizados = listAgeDisp;
        this.usuario = usuario;
        this.arrayRefeicoes = refeicoes;
        
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAgeDisponibilizados = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbRefeicao = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Entradas Sem Agendamento");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableAgeDisponibilizados.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        tableAgeDisponibilizados.setModel(new MyTableModel());
        tableAgeDisponibilizados.setToolTipText("Agendamentos Disponibilizados");
        jScrollPane1.setViewportView(tableAgeDisponibilizados);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 770, 180));

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jLabel1.setText("Agendamentos Disponibilizados");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 770, 30));

        jLabel3.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jLabel3.setText("Selecione uma refeição para o usuario:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 30));

        cmbRefeicao.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        cmbRefeicao.setModel(new DefaultComboBoxModel<APIRefeicao2>(this.arrayRefeicoes));
        cmbRefeicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRefeicaoActionPerformed(evt);
            }
        });
        jPanel1.add(cmbRefeicao, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 770, 27));

        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(550, 550, 550)
                        .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        PrincipalControl.getPrincipalControl().clearUserInfo();
    	this.dispose();
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        System.out.println(tableAgeDisponibilizados.getSelectedRow());
        boolean erro = false;
        
        if(this.ageDisponibilizados != null && !this.ageDisponibilizados.isEmpty() && tableAgeDisponibilizados.getSelectedRow()<0){
            JOptionPane.showMessageDialog(null, "Selecione um Agendamento Disponivel!");
            erro = true;
        }
        
        if(this.cmbRefeicao.getSelectedIndex()<=0){
            JOptionPane.showMessageDialog(null, "Selecione uma Refeição!");
            erro = true;
        }
        
        if(erro){
            return;
        }
        
        if(this.ageDisponibilizados == null || this.ageDisponibilizados.isEmpty()){
			LocalDate ll = LocalDate.now();
			this.agendamento = new APIAgendamento(ll, null, (APIRefeicao2) this.cmbRefeicao.getSelectedItem());
        }else{
            this.ageDisp = this.ageDisponibilizados.get(tableAgeDisponibilizados.getSelectedRow());
            this.ageDisp.getAgendamento().setRefeicao((APIRefeicao2)this.cmbRefeicao.getSelectedItem());
        }
        
        PrincipalControl.getPrincipalControl().setDadosAgendamento(this.ageDisp,this.agendamento);
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbRefeicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRefeicaoActionPerformed

    }//GEN-LAST:event_cmbRefeicaoActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FormSemAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FormSemAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FormSemAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FormSemAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FormSemAgendamento().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JComboBox<APIRefeicao2> cmbRefeicao;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAgeDisponibilizados;
    // End of variables declaration//GEN-END:variables
}
